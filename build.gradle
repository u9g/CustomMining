plugins {
    id 'java'
    id 'xyz.jpenilla.run-paper' version '1.0.6' // Adds runServer and runMojangMappedServer tasks for testing
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

group = 'com.github.u9g'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url 'https://repo.decalium.ru/releases'
    }
    maven {
        url 'https://redempt.dev'
    }
    maven {
        url = "https://repo.onarandombox.com/content/groups/public/"
    }
    maven {
        url "https://maven.enginehub.org/repo/"
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.18.1-R0.1-SNAPSHOT'
    implementation 'com.github.u9g:U9GUtils:1.1-SNAPSHOT'
    implementation 'com.github.u9g:betterblockbreaking:1.0-SNAPSHOT'
    implementation 'com.github.Redempt:RedLib:da3fb73'
    implementation 'com.github.u9g:SafeReset:1.0-SNAPSHOT'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.6'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

jar.configure {
    actions.clear()
    dependsOn shadowJar
}

shadowJar.configure {
    archiveClassifier.set('')
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.18.1")
    }
}
